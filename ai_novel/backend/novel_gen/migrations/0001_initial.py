# Generated by Django 4.2.20 on 2025-03-12 09:39

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ActDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('act_number', models.IntegerField(choices=[(1, '第1幕'), (2, '第2幕'), (3, '第3幕')], verbose_name='幕番号')),
                ('title', models.CharField(max_length=255, verbose_name='タイトル')),
                ('content', models.TextField(verbose_name='内容')),
                ('raw_content', models.TextField(verbose_name='生データ')),
                ('is_edited', models.BooleanField(default=False, verbose_name='編集済み')),
            ],
            options={
                'verbose_name': '幕の詳細',
                'verbose_name_plural': '幕の詳細',
                'ordering': ['act_number'],
            },
        ),
        migrations.CreateModel(
            name='AIStory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='タイトル')),
                ('status', models.CharField(choices=[('draft', '下書き'), ('in_progress', '作成中'), ('completed', '完成'), ('published', '公開中')], default='draft', max_length=20, verbose_name='ステータス')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stories', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'AI小説',
                'verbose_name_plural': 'AI小説',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('credit', models.IntegerField(default=100, verbose_name='クレジット')),
                ('bio', models.TextField(blank=True, verbose_name='自己紹介')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'ユーザープロファイル',
                'verbose_name_plural': 'ユーザープロファイル',
            },
        ),
        migrations.CreateModel(
            name='EpisodeDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('episode_number', models.IntegerField(verbose_name='エピソード番号')),
                ('title', models.CharField(max_length=255, verbose_name='タイトル')),
                ('content', models.TextField(verbose_name='内容')),
                ('raw_content', models.TextField(verbose_name='生データ')),
                ('is_edited', models.BooleanField(default=False, verbose_name='編集済み')),
                ('act', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='episode_details', to='novel_gen.actdetail')),
            ],
            options={
                'verbose_name': 'エピソード詳細',
                'verbose_name_plural': 'エピソード詳細',
                'ordering': ['episode_number'],
                'unique_together': {('act', 'episode_number')},
            },
        ),
        migrations.CreateModel(
            name='EpisodeContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('title', models.CharField(max_length=255, verbose_name='タイトル')),
                ('content', models.TextField(verbose_name='本文')),
                ('word_count', models.IntegerField(verbose_name='文字数')),
                ('raw_content', models.TextField(verbose_name='生データ')),
                ('is_edited', models.BooleanField(default=False, verbose_name='編集済み')),
                ('episode', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='episode_content', to='novel_gen.episodedetail')),
            ],
            options={
                'verbose_name': 'エピソード本文',
                'verbose_name_plural': 'エピソード本文',
            },
        ),
        migrations.CreateModel(
            name='CreditHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('amount', models.IntegerField(verbose_name='変動量')),
                ('balance', models.IntegerField(verbose_name='残高')),
                ('action_type', models.CharField(choices=[('add', '追加'), ('use', '使用')], max_length=10, verbose_name='アクションタイプ')),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='説明')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='credit_history', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'クレジット履歴',
                'verbose_name_plural': 'クレジット履歴',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CharacterDetail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('name', models.CharField(max_length=100, verbose_name='名前')),
                ('role', models.CharField(max_length=100, verbose_name='役割')),
                ('age', models.CharField(blank=True, max_length=50, null=True, verbose_name='年齢')),
                ('gender', models.CharField(blank=True, max_length=50, null=True, verbose_name='性別')),
                ('appearance', models.TextField(blank=True, null=True, verbose_name='外見')),
                ('personality', models.TextField(blank=True, null=True, verbose_name='性格')),
                ('background', models.TextField(blank=True, null=True, verbose_name='背景')),
                ('motivation', models.TextField(blank=True, null=True, verbose_name='動機')),
                ('relationship', models.TextField(blank=True, null=True, verbose_name='他キャラクターとの関係')),
                ('development', models.TextField(blank=True, null=True, verbose_name='キャラクター成長')),
                ('raw_content', models.TextField(verbose_name='生データ')),
                ('is_edited', models.BooleanField(default=False, verbose_name='編集済み')),
                ('ai_story', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='character_details', to='novel_gen.aistory')),
            ],
            options={
                'verbose_name': 'キャラクター詳細',
                'verbose_name_plural': 'キャラクター詳細',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='BasicSettingData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('theme', models.CharField(max_length=100, verbose_name='主題')),
                ('time_and_place', models.CharField(max_length=100, verbose_name='時代と場所')),
                ('world_setting', models.CharField(max_length=100, verbose_name='作品世界と舞台設定')),
                ('plot_pattern', models.CharField(max_length=100, verbose_name='プロットパターン')),
                ('love_expressions', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, size=None, verbose_name='愛情表現')),
                ('emotional_expressions', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, size=None, verbose_name='感情表現')),
                ('atmosphere', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, size=None, verbose_name='雰囲気演出')),
                ('sensual_expressions', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, size=None, verbose_name='官能表現')),
                ('mental_elements', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, size=None, verbose_name='精神的要素')),
                ('social_elements', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, size=None, verbose_name='社会的要素')),
                ('past_mysteries', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, size=None, verbose_name='過去の謎')),
                ('raw_content', models.JSONField(blank=True, null=True, verbose_name='生データ')),
                ('formatted_content', models.TextField(blank=True, verbose_name='整形済みデータ')),
                ('ai_story', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='basic_setting_data', to='novel_gen.aistory')),
            ],
            options={
                'verbose_name': '基本設定作成用データ',
                'verbose_name_plural': '基本設定作成用データ',
            },
        ),
        migrations.CreateModel(
            name='BasicSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('story_setting', models.TextField(verbose_name='作品設定')),
                ('characters', models.TextField(verbose_name='登場人物設定')),
                ('plot_overview', models.TextField(verbose_name='あらすじ概要')),
                ('act1_overview', models.TextField(verbose_name='第1幕概要')),
                ('act2_overview', models.TextField(verbose_name='第2幕概要')),
                ('act3_overview', models.TextField(verbose_name='第3幕概要')),
                ('raw_content', models.TextField(verbose_name='生データ')),
                ('is_edited', models.BooleanField(default=False, verbose_name='編集済み')),
                ('ai_story', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='basic_setting', to='novel_gen.aistory')),
                ('setting_data', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='basic_settings', to='novel_gen.basicsettingdata')),
            ],
            options={
                'verbose_name': '基本設定',
                'verbose_name_plural': '基本設定',
            },
        ),
        migrations.CreateModel(
            name='APIRequestLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='作成日時')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新日時')),
                ('request_type', models.CharField(choices=[('basic_setting_data', '基本設定作成用データ'), ('basic_setting', '基本設定'), ('character_detail', 'キャラクター詳細'), ('plot_detail', 'あらすじ詳細'), ('episode_detail', 'エピソード詳細'), ('episode_content', 'エピソード本文'), ('title_episode', 'エピソードタイトル'), ('title_act', '幕タイトル'), ('title_novel', '小説タイトル')], max_length=20, verbose_name='リクエストタイプ')),
                ('parameters', models.JSONField(blank=True, null=True, verbose_name='パラメータ')),
                ('response', models.TextField(blank=True, null=True, verbose_name='レスポンス')),
                ('is_success', models.BooleanField(default=True, verbose_name='成功フラグ')),
                ('credit_cost', models.IntegerField(default=0, verbose_name='消費クレジット')),
                ('error_message', models.TextField(blank=True, null=True, verbose_name='エラーメッセージ')),
                ('ai_story', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='api_logs', to='novel_gen.aistory')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='api_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'APIリクエストログ',
                'verbose_name_plural': 'APIリクエストログ',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='actdetail',
            name='ai_story',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='act_details', to='novel_gen.aistory'),
        ),
        migrations.AlterUniqueTogether(
            name='actdetail',
            unique_together={('ai_story', 'act_number')},
        ),
    ]
